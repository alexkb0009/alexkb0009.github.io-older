<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.4.5">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-10-06T16:03:50-04:00</updated><id>http://localhost:4000/</id><title type="html">Past Work</title><subtitle>This is some of my past work.
</subtitle><entry><title type="html">Clinical Genomic Analysis Platform</title><link href="http://localhost:4000/cgap-portal" rel="alternate" type="text/html" title="Clinical Genomic Analysis Platform" /><published>2010-01-25T00:00:00-05:00</published><updated>2010-01-25T00:00:00-05:00</updated><id>http://localhost:4000/cgap</id><content type="html" xml:base="http://localhost:4000/cgap-portal">&lt;p&gt;A platform for clinicians to gather information on and submit patient cases for DNA sequencing, analysis, reporting, &amp;amp; more. Will be able to run analytic pipelines on sequenced DNA data in order to attempt to identify genetic and yet-undiagnosed diseases.&lt;/p&gt;

&lt;p&gt;Alpha version in development (leading front-end). The final ‘brand’ name (and domain) is still to be decided.&lt;/p&gt;

&lt;p&gt;Overall codebase is based on that of the 4DN Nucleome Data Portal. Back-end infrastructure is the same, however is being extended to be able to store &amp;amp; reference variant annotations (terabytes+) from patient sample variants.&lt;/p&gt;

&lt;p&gt;For frontend, common reusable components have been split out from 4DN portal into either a repo containing shared portal components or own repo(s) (depending on reusability &amp;amp; potential usefulness to other developers) and are being re-used in this new platform while the overrall look &amp;amp; feel has greately diverged.&lt;/p&gt;

&lt;p&gt;One interesting visualization feature we’re building is the Pedigree visualization tool for clinicians to be able to view a  family tree containing genetic features and history. This tool is built by having React components render out SVG and HTML elements, utilizing some D3 functions used to help generate line dimensions, and a healthy amount of algorithms to figure out the most optimal ordering and positioning of nodes as well as visually optimal routing of edges/paths.&lt;/p&gt;</content><author><name></name></author><category term="JavaScript" /><category term="React.js" /><category term="D3" /><category term="Python" /><category term="PostgreSQL" /><category term="ElasticSearch" /><category term="Pyramid" /><category term="AWS" /><category term="SCSS" /><summary type="html">A platform for clinicians to gather information on and submit patient cases for DNA sequencing, analysis, reporting, &amp;amp; more. Will be able to run analytic pipelines on sequenced DNA data in order to attempt to identify genetic and yet-undiagnosed diseases.</summary></entry><entry><title type="html">4D Nucleome Data Portal</title><link href="http://localhost:4000/4dn-data-portal" rel="alternate" type="text/html" title="4D Nucleome Data Portal" /><published>2010-01-23T00:00:00-05:00</published><updated>2010-01-23T00:00:00-05:00</updated><id>http://localhost:4000/fourdn-data-portal</id><content type="html" xml:base="http://localhost:4000/4dn-data-portal">&lt;p&gt;Data coordination portal for the 4D Nucleome (4DN) project built in Harvard Medical School’s Department of Biomedical Informatics (HMS DBMI). Leading front-end development.&lt;/p&gt;

&lt;p&gt;A single-page application (SPA) built on React.js which enables researchers to upload, share, browse, and download large data-files relating to the research of 4DN.&lt;/p&gt;

&lt;p&gt;Back-end is built in Python 3 as a RESTful API using the Pyramid web framework, with server-side rendering of the API response performed with React.js.&lt;/p&gt;

&lt;p&gt;This portal integrates the work of other teams both at Harvard Medical School’s Department of Biomedical Informatics (HMS DBMI) and other organizations, such as UMass Medical School (UMMS), which have built out visualization tools such as &lt;a href=&quot;https://higlass.io&quot;&gt;HiGlass&lt;/a&gt; and a microscope configuration GUI. We have helped partner teams build out and package such projects as reusable/distributable React components w. Babel, Webpack, and NPM which we can then import and use in the 4DN portal (with code-splitting).&lt;/p&gt;

&lt;p&gt;Among notable visualization features which have been specifically built inside the 4DN portal includes the &lt;a href=&quot;/react-workflow-viz&quot;&gt;Workflow and File Provenance graphing component(s)&lt;/a&gt; which can graph any CWL-based Workflow representation. This Worklow visualization library is &lt;a href=&quot;https://github.com/4dn-dcic/react-workflow-viz&quot;&gt;being put into its own repository&lt;/a&gt; and at some point will be available on NPM.&lt;/p&gt;</content><author><name></name></author><category term="JavaScript" /><category term="React.js" /><category term="D3" /><category term="Python" /><category term="PostgreSQL" /><category term="ElasticSearch" /><category term="Pyramid" /><category term="AWS" /><category term="API" /><category term="Platform" /><category term="SCSS" /><summary type="html">Data coordination portal for the 4D Nucleome (4DN) project built in Harvard Medical School’s Department of Biomedical Informatics (HMS DBMI). Leading front-end development.</summary></entry><entry><title type="html">`react-workflow-viz` Library</title><link href="http://localhost:4000/react-workflow-viz" rel="alternate" type="text/html" title="`react-workflow-viz` Library" /><published>2010-01-22T00:00:00-05:00</published><updated>2010-01-22T00:00:00-05:00</updated><id>http://localhost:4000/react-workflow-viz-lib</id><content type="html" xml:base="http://localhost:4000/react-workflow-viz">&lt;p&gt;&lt;code&gt;react-workflow-viz&lt;/code&gt; (suggestions for better name are welcome) is a distributable module library containing a React components and parsing functions that can be used to visualize workflows, pipelines, and similar graph structures. The entry &lt;code&gt;GraphParser&lt;/code&gt; Component accepts via a prop a &lt;a href=&quot;https://www.commonwl.org/&quot;&gt;CWL&lt;/a&gt;-like JSON structure that has been extended by adding target references to future steps for bidirectionality.&lt;/p&gt;

&lt;p&gt;It was originally created in the &lt;a href=&quot;/4dn-data-portal&quot;&gt;4DN Portal&lt;/a&gt; to visualize CWL workflows as well as provenance of processed files which were generated by &lt;a href=&quot;https://github.com/4dn-dcic/tibanna&quot;&gt;analytic pipelines ran in AWS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Will be published on NPM sometime in the near future.&lt;/p&gt;</content><author><name></name></author><category term="JavaScript" /><category term="React.js" /><category term="D3" /><category term="CWL" /><category term="SCSS" /><category term="NPM" /><summary type="html">react-workflow-viz (suggestions for better name are welcome) is a distributable module library containing a React components and parsing functions that can be used to visualize workflows, pipelines, and similar graph structures. The entry GraphParser Component accepts via a prop a CWL-like JSON structure that has been extended by adding target references to future steps for bidirectionality.</summary></entry><entry><title type="html">IntelAgent - Real Estate Platform</title><link href="http://localhost:4000/intelagent-real-estate-platform" rel="alternate" type="text/html" title="IntelAgent - Real Estate Platform" /><published>2010-01-21T00:00:00-05:00</published><updated>2010-01-21T00:00:00-05:00</updated><id>http://localhost:4000/intelagent</id><content type="html" xml:base="http://localhost:4000/intelagent-real-estate-platform">&lt;p&gt;An in-progress project for connecting those looking to buy beautiful homes to real estate agents.&lt;/p&gt;

&lt;p&gt;Horizontally scalable with OpenShift PaaS, using MongoDB and Redis as persistent and temporary data stores, respectively with Redis also used as a PubSub queue to synchronize servers’ states.&lt;/p&gt;

&lt;p&gt;As lead designer &amp;amp; developer until leaving near the end of 2016, built out the initial versions of the back-end API (Flask), web front-end (Jinja2, React.js), and iOS mobile application (React Native).&lt;/p&gt;</content><author><name></name></author><category term="JavaScript" /><category term="React.js" /><category term="Python" /><category term="MongoDB" /><category term="Redis" /><category term="Websockets" /><category term="OpenShift" /><category term="API" /><category term="React Native" /><category term="iOS" /><category term="CSS3" /><summary type="html">An in-progress project for connecting those looking to buy beautiful homes to real estate agents.</summary></entry><entry><title type="html">Issues - eParticipation Platform</title><link href="http://localhost:4000/issues-eparticipation-platform" rel="alternate" type="text/html" title="Issues - eParticipation Platform" /><published>2010-01-20T00:00:00-05:00</published><updated>2010-01-20T00:00:00-05:00</updated><id>http://localhost:4000/issues-citizen-centric-eparticipation-platform</id><content type="html" xml:base="http://localhost:4000/issues-eparticipation-platform">&lt;p&gt;&lt;em&gt;My Issues&lt;/em&gt; (name not final) is a prototypical citizen-centric e-participation platform which aims to enhance the quantity and quality of communication between citizens and their representatives in legislature. This project is the outcome of my academic thesis which began in 2014 and development of it is still on-going during spare time. Contact if would like a copy of the thesis book, covering conceptual design and development of the platform in much greater depth.&lt;/p&gt;

&lt;h3 id=&quot;technology&quot;&gt;Technology&lt;/h3&gt;

&lt;p&gt;Platform backend is written in Python, aided by the Bottle.py microframework. Backend presents end-points for pages such as home, issue, and topic listings, and the remainder of back-end functionality is accessed through RESTful JSON API, as well a couple of simple non-JSON API endpoints. Page layout is built using Jinja2 (templating engine for Python) + Foundation (front-end framework), with majority of interactivity being implemented in JavaScript as part of Backbone.js models and views. The application instances of the platform can be scaled horizontally to accomodate any number of users and is set to do so through Red Hat’s OpenShift PaaS which runs on Amazon Web Services EC2. All application instances share a connection to a MongoDB database for persistent storage - user accounts, issues, votes, etc. and a connection to a Redis database which currently provides session storage and, eventually, caching. Application instances may also be run as Windows services with aid of the PyWin32 module.&lt;/p&gt;

&lt;h3 id=&quot;background--extended-description&quot;&gt;Background &amp;amp; Extended Description&lt;/h3&gt;
&lt;p&gt;The platform seeks to increase representation of any constituency’s interests to constituency’s legislature by leveraging evolving concepts of user experience (UX) design and collaborative content generation in the field of software development. Ideally, the platform will counter-balance the influence of special-interest lobbyists – many of whom are not direct members of the constituency of the legislator which they are lobbying to. In a dangerous plausible scenario, a lobbyist’s interests might be more closely aligned with interests of a foreign power than with interests of the constituency.&lt;/p&gt;

&lt;p&gt;Encroachment on a constituency’s representatives is sometimes evident in the lobbying efforts of resourceful entities. U.S. Representative Tony Cárdenas, in context of discussing the disproportionate influence of Comcast Corporation’s lobbying efforts on legislative decision-making, resolves via a Reddit post that while decision-making based solely on positions presented by lobbyists is rare, “Hearing people who are completely sure of themselves making a case helps me see parts of it I may not have seen before.”[1] Cárdenas also demonstrates a difficulty in identifying preferences of constituencies: “I don’t get to be black and white. I have 750,000 shades of greyscale in my district…”[2] Disproportionate representation of interests thus appears to be catalyzed in part by legislators’ lack of access to definite comprehensible information about their constituencies’ preferences.[3] Additionally, much of the population arguably perceives real and imagined hindrances to individual participation in the form of a large &amp;amp; increasing constituent–representative ratio (average of over 738,000-to-1 for U.S. House of Representatives)[4] and depressed availability of time &amp;amp; interest to allocate to civic participation relative to immediate needs[5].&lt;/p&gt;

&lt;p&gt;The My Issues platform adapts concepts exemplified in precedent online collaborative and social platforms to transparently aggregate and present constituencies’ preferences regarding relevant issues as well as possible responses to those issues. Reddit’s voting &amp;amp; ranking mechanism informs a similar design in My Issues for aggregating constituent preferences while Wikipedia’s mechanism for iteratively revising an article to reach and maintain consensus of article’s content and structure is adapted for issue definitions. Simple-to-use, rapidly-loading, and engaging user experiences in popular social media platforms such as Twitter and Facebook inform UX design in My Issues and simultaneously serve as conduits for cascading the visibility of the collaboratively-defined issues and consequently, visibility of and participation on the My Issues platform itself. Further work includes iterating on elements of platform design in response to feedback – e.g. mechanism function, UX, ‘branding’ &amp;amp; other details – and implementing alongside already-planned components – e.g. constituent authentication, settings pages.&lt;/p&gt;

&lt;h4 id=&quot;notes&quot;&gt;Notes&lt;/h4&gt;
&lt;p&gt;[1] Cárdenas, Tony, “Proud Today That I Became One of the First House Members Vocally AGAINST Comcast/Time-Warner,” Reddit, February 18, 2015, accessed July 4, 2015, https://www.reddit.com/r/technology/comments/2wcoxy/proud_today_that_i_became_one_of_the_first_house/copx5zn.&lt;/p&gt;

&lt;p&gt;[2] Ibid.&lt;/p&gt;

&lt;p&gt;[3] As well as lack of access by other legislatively influential entities, e.g. politicians, business leaders, media, and other constituents.&lt;/p&gt;

&lt;p&gt;[4] The U.S. House of Representatives is limited by law to 435 members, while the overall population of the United States (321,288,000 – on July 14, 2015 at 1:13PM EST) is currently increasing at a rate of one (+1) every twelve seconds. “The House Explained,” United States House of Representatives, accessed November 18, 2014, http://www.house.gov/content/learn/. “Population Clock,” United States Census Bureau, accessed July 14, 2015, http://www.census.gov/popclock/.&lt;/p&gt;

&lt;p&gt;[5] E.g. shopping for groceries &amp;amp; essential products, taking care of &amp;amp; educating children, household maintenance &amp;amp; upkeep.&lt;/p&gt;</content><author><name></name></author><category term="JavaScript" /><category term="Backbone.js" /><category term="Python" /><category term="MongoDB" /><category term="Redis" /><category term="OpenShift" /><category term="RESTful" /><category term="API" /><category term="Platform" /><category term="Jinja2" /><category term="CSS3" /><category term="Incomplete" /><summary type="html">My Issues (name not final) is a prototypical citizen-centric e-participation platform which aims to enhance the quantity and quality of communication between citizens and their representatives in legislature. This project is the outcome of my academic thesis which began in 2014 and development of it is still on-going during spare time. Contact if would like a copy of the thesis book, covering conceptual design and development of the platform in much greater depth.</summary></entry><entry><title type="html">Personal Portfolio - Splash Page</title><link href="http://localhost:4000/personal-portfolio-splashpage" rel="alternate" type="text/html" title="Personal Portfolio - Splash Page" /><published>2010-01-18T00:00:00-05:00</published><updated>2010-01-18T00:00:00-05:00</updated><id>http://localhost:4000/personal-splash-page</id><content type="html" xml:base="http://localhost:4000/personal-portfolio-splashpage">&lt;p&gt;A JavaScript Canvas (HTML5) introduction animation to the old version of my portfolio. Created as an excuse to play with JavaScript canvas. Uses an older Adobe Flash technique to plot points in 2.5D perspective (vs using a camera and generating real 3D perspective).&lt;/p&gt;</content><author><name></name></author><category term="JavaScript" /><category term="Canvas" /><summary type="html">A JavaScript Canvas (HTML5) introduction animation to the old version of my portfolio. Created as an excuse to play with JavaScript canvas. Uses an older Adobe Flash technique to plot points in 2.5D perspective (vs using a camera and generating real 3D perspective).</summary></entry><entry><title type="html">ViewPoint Kiosks - Marketing Site</title><link href="http://localhost:4000/viewpoint-kiosks-marketing-site" rel="alternate" type="text/html" title="ViewPoint Kiosks - Marketing Site" /><published>2010-01-17T00:00:00-05:00</published><updated>2010-01-17T00:00:00-05:00</updated><id>http://localhost:4000/viewpoint-kiosks-website</id><content type="html" xml:base="http://localhost:4000/viewpoint-kiosks-marketing-site">&lt;p&gt;This is a marketing website which was initially created in one week and then expanded &amp;amp; iterated on in response to added requirements. Its purpose is to market ViewPoint Kiosks - one of ICS’s products.&lt;/p&gt;

&lt;p&gt;The site is built using the &lt;a href=&quot;https://bolt.cm&quot;&gt;Bolt&lt;/a&gt; CMS with custom-coded (utilizing OOP PHP w/ Silex, Doctrine, and Symfony components) as well as existing community-provided third-party extensions/modules.&lt;/p&gt;

&lt;p&gt;The extensions custom-coded for the ViewPoint kiosks website include one with the purpose of importing &amp;amp; synchronizing content from non-standard third-party APIs into native Bolt CMS content-types. Theme templating and (some) logic in Bolt is available through the Twig templating engine - a succinct subset of PHP that looks nice &amp;amp; manageable beside HTML. Implementation of website is further aided &amp;amp; accelerated by Foundation framework (provided in Bolt’s default base theme) to allow very rapid implementation &amp;amp; prototyping of custom designs.&lt;/p&gt;</content><author><name></name></author><category term="PHP" /><category term="JavaScript" /><category term="Bolt CMS" /><category term="Graphic Design" /><category term="Silex" /><category term="Doctrine" /><category term="Twig" /><category term="Foundation" /><category term="CSS3" /><summary type="html">This is a marketing website which was initially created in one week and then expanded &amp;amp; iterated on in response to added requirements. Its purpose is to market ViewPoint Kiosks - one of ICS’s products.</summary></entry><entry><title type="html">Experimental WebGL Game</title><link href="http://localhost:4000/experimental-webgl-game" rel="alternate" type="text/html" title="Experimental WebGL Game" /><published>2010-01-16T00:00:00-05:00</published><updated>2010-01-16T00:00:00-05:00</updated><id>http://localhost:4000/experimental-webgl-game</id><content type="html" xml:base="http://localhost:4000/experimental-webgl-game">&lt;p&gt;Playing with Babylon.js (WebGL library), TypeScript, and (todo) socket.io (websocket server for node.js) with potential goal of creating a multiplayer game.&lt;/p&gt;

&lt;p&gt;Very much incomplete/in-progress.&lt;/p&gt;</content><author><name></name></author><category term="JavaScript" /><category term="TypeScript" /><category term="3D" /><category term="Game" /><category term="Node.js" /><category term="Websockets" /><category term="Incomplete" /><summary type="html">Playing with Babylon.js (WebGL library), TypeScript, and (todo) socket.io (websocket server for node.js) with potential goal of creating a multiplayer game.</summary></entry><entry><title type="html">ICS UX Page Header</title><link href="http://localhost:4000/ics-ux-marketing-page-header" rel="alternate" type="text/html" title="ICS UX Page Header" /><published>2010-01-15T00:00:00-05:00</published><updated>2010-01-15T00:00:00-05:00</updated><id>http://localhost:4000/ics-ux-marketing-page-header</id><content type="html" xml:base="http://localhost:4000/ics-ux-marketing-page-header">&lt;p&gt;A header graphic animation created for the UX team’s new marketing page using solely CSS3 transformations, transitions, and animations.&lt;/p&gt;</content><author><name></name></author><category term="CSS3" /><summary type="html">A header graphic animation created for the UX team’s new marketing page using solely CSS3 transformations, transitions, and animations.</summary></entry><entry><title type="html">ICS User Experience Page</title><link href="http://localhost:4000/ics-ux-webpage" rel="alternate" type="text/html" title="ICS User Experience Page" /><published>2010-01-14T00:00:00-05:00</published><updated>2010-01-14T00:00:00-05:00</updated><id>http://localhost:4000/ics-ux-page</id><content type="html" xml:base="http://localhost:4000/ics-ux-webpage">&lt;p&gt;Development of the ICS User Experience ‘parallax’ marketing page (in finalization as of February 2014).&lt;/p&gt;

&lt;p&gt;Performed complete implementation of the design &amp;amp; mockups, which was produced by ICS’s UX Design Team, as well as providing feedback, feasibility of implementation, and iterating on the design. Finally (not pictured), integrated with existing ICS website’s CMS (Drupal) for synchronization of top-level menu.&lt;/p&gt;

&lt;p&gt;Implemented using JavaScript + HTML/CSS, with some PHP for integration with Drupal.&lt;/p&gt;</content><author><name></name></author><category term="JavaScript" /><category term="CSS3" /><category term="PHP" /><summary type="html">Development of the ICS User Experience ‘parallax’ marketing page (in finalization as of February 2014).</summary></entry></feed>